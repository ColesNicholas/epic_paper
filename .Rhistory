expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(2, 1, 1))
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.5, 1, 1))
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.3, 1, 1))
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.1, 1, 1))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.1, 1, 1))
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
library(grid)
g <- rasterGrob(blues9, width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
grid.draw(g)
?rasterGrob
rasterGrob(greenGradient,
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
g <- rasterGrob(Greens,
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
colorRampPalette(brewer.pal(6, "Greens"))
library(RColorBrewer)
colorRampPalette(brewer.pal(6, "Greens"))
rasterGrob(Greens,
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
colorRampPalette(brewer.pal(6, "Greens"))
g <- rasterGrob(colorRampPalette(brewer.pal(6, "Greens")),
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
rasterGrob(brewer.pal(6, "Greens"),
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
g <- rasterGrob(brewer.pal(6, "Greens"),
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
grid.draw(g)
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
annotation_custom(g, xmin= Inf, xmax=-Inf, ymin=Inf, ymax=-Inf) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
fig2
grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
?rasterGrob
source("~/.active-rstudio-document", echo=TRUE)
g <- rasterGrob(brewer.pal(9, -"Greens"),
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE,
just = "top")
?brewer.pal
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# add grid
annotation_custom(g, xmin= Inf, xmax=-Inf, ymin=Inf, ymax=-Inf)
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# add grid
annotation_custom(g, xmin= Inf, xmax=-Inf, ymin=Inf, ymax=-Inf) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
g <- rasterGrob(rev(brewer.pal(, "Greens")),
width=unit(1,"npc"), height = unit(1,"npc"),
interpolate = TRUE)
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.15, 1, 1))
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
png(file = "Figure2.png",
width = 6.5,
height = 7.6,
units = "in",
res = 600)
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
dev.off()
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight),
scenario = factor(scenario,
labels = c('s',
'e' ,
'i',
't')),
title = x)
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# make the title a facet (for aesthetic reasons)
facet_wrap(~ title) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 2)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank()) +
scale_y_continuous(expand =
expansion(mult = c(0, .05)),
limits = c(.6, 2.2)) +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.ticks.y = element_blank())}
# return plot
return(g)
}
)
margin = theme(plot.margin = unit(c(4, 4, 4, 4), "points"))
fig2 <- grid.arrange(grobs = fig2.list,
left = "",
bottom = "validation",
widths=c(1.25, 1, 1))
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
png(file = "Figure2.png",
width = 6.5,
height = 7.6,
units = "in",
res = 600)
plot_grid(fig1, fig2,
labels = c('A', 'B'),
ncol = 2)
dev.off()
