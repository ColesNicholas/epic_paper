ncol = 1) +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 0,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean + .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
scale_x_continuous(expand =
expansion(mult = c(0, .05))) +
theme(legend.position = "none") +
scale_x_reverse()
#rm(DF.f1)
fig1
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
reverse_scale_x()
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse()
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse()
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5)
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5)
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5)
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4)
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF')
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean + .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0)
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0)
fig1 <-
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse() +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
scale_x_continuous(expand =
expansion(mult = c(0, .05))) +
theme(legend.position = "none")
#rm(DF.f1)
fig1
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse(expand =
expansion(mult = c(0, .05)))
fig1 <-
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse(expand =
expansion(mult = c(0, .05))) +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 3,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
# scale_x_continuous(expand =
#                      expansion(mult = c(0, .05))) +
theme(legend.position = "none")
#rm(DF.f1)
fig1
fig1 <-
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
scale_x_reverse(expand =
expansion(mult = c(0, .05))) +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 2.75,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .15,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
# scale_x_continuous(expand =
#                      expansion(mult = c(0, .05))) +
theme(legend.position = "none")
#rm(DF.f1)
fig1
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight))
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 2) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 3)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank(),
) +
scale_y_reverse() +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())}
# return plot
return(g)
}
)
# 1,4,7 9 need x axis
library(gridExtra)
fig2 <- grid.arrange(grobs = fig2.list,
left = "mean absolute prediction error",
bottom = "validation")
grid.arrange(fig1, fig2,
ncol = 2)
library('cowplot')
plot_grid(fig1, NULL, fig2,
rel_widths = c(1, .2, 1),
labels = c('A', '', 'B'),
ncol = 3)
plot_grid(fig1, NULL, fig2,
rel_widths = c(1, .1, 1),
labels = c('A', '', 'B'),
ncol = 3)
fig1 <-
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
# reverse x scale
scale_x_reverse(expand =
expansion(mult = c(0, .05))) +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 2.75,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .1,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
theme(legend.position = "none")
#rm(DF.f1)
plot_grid(fig1, NULL, fig2,
rel_widths = c(1, .1, 1),
labels = c('A', '', 'B'),
ncol = 3)
fig1 <-
ggplot(DF.f1,
aes(x = m.err,
y = team)) +
# facet plot
facet_wrap(~ scenario,
nrow = 4,
ncol = 1) +
# reverse x scale
scale_x_reverse(expand =
expansion(mult = c(0, .05))) +
# create lollipop plot
geom_segment(aes(y = team,
yend = team,
x = 2.75,
xend = m.err),
colour = "grey90",
linewidth = 1.5) +
geom_point(aes(color = team),
size = 4) +
# add lines for baseline_random and baseline_mean performance
geom_vline(linetype = 'dotted',
aes(xintercept = baseline_random),
colour = '#3366FF') +
geom_vline(linetype = 'dashed',
aes(xintercept = baseline_mean),
colour = '#3366FF') +
# add summary statistic text (to show where models significantly differed from mean baseline)
geom_text(aes(x = baseline_mean - .05,
label = paste0(p.value__mean)),
size = 3,
hjust = 0) +
ylab('model developers') +
xlab('mean absolute prediction error') +
theme(legend.position = "none")
#rm(DF.f1)
plot_grid(fig1, NULL, fig2,
rel_widths = c(1, .1, 1),
labels = c('A', '', 'B'),
ncol = 3)
fig2.list <-
lapply(X = unique(DF.f1$team),
FUN = function(x){
# identify if case is the team you want to highlight
d <- DF.f1 %>%
mutate(highlight =
if_else(team == x,
1,
0),
highlight = factor(highlight))
# create plot
g <- ggplot(d,
aes(y = m.err,
x = scenario,
group = team,
colour = team,
size = highlight)) +
# plot non-highlighted lines in grey
geom_line(data = d %>%
filter(highlight == 0),
colour = "grey90",
linewidth = 1) +
# plot all lines, but then remove the non-highlighted ones
geom_line() +
scale_size_manual(values = c(NA, 3)) +
# clean up aesthetics
theme(legend.position = "none",
axis.title = element_blank(),
) +
scale_y_reverse() +
# conditional formatting to manually make it look like a facet
{if(x != "team 10" &
x != "team 11" &
x != "team 12")
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())} +
{if(x != "team 1" &
x != "team 4" &
x != "team 7" &
x != "team 10")
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())}
# return plot
return(g)
}
)
# 1,4,7 9 need x axis
library(gridExtra)
fig2 <- grid.arrange(grobs = fig2.list,
left = "mean absolute prediction error",
bottom = "validation")
grid.arrange(fig1, fig2,
ncol = 2)
library('cowplot')
plot_grid(fig1, NULL, fig2,
rel_widths = c(1, .1, 1),
labels = c('A', '', 'B'),
ncol = 3)
